openapi: 3.0.0
info:
  version: 1.0.0
  title: ''
  description: Simple API for HME group project
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/fkadir/HMEApi/1.0.0
paths:
  /users:
    get:
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/properties:
    get:
      summary: returns a list of properties
      responses:
        '200':
          description: A JSON array of QuickViewPropery objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuickViewProperty'

  /api/properties/{propertyId}:
    get:
      summary: returns details of a specific property
      parameters:
        - in: path
          name: propertyId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A DetailedPropery object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedProperty'

  /api/properties/search:
    get:
      summary: returns a list of QuickViewProperty objects
      parameters:
        - in: query
          name: propertyId
          required: false
          schema:
            type: string
        - in: query
          name: priceRange
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: type
          required: false
          schema:
            type: string
        - in: query
          name: zipcode
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of QuickViewPropery objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuickViewProperty'


  /api/properties/{propertyId}/images:
    get:
      summary: returns JSON array of http links for property images
      parameters:
        - in: path
          name: propertyId
          required: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: QuickViewImage
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: a JSON array of image link(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /api/user/favourites:
    get:
      summary: retrieve all of the user's favourite properties
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: propertyId
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of QuickViewPropery objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuickViewProperty'
    post:
      summary: create new favourite property for user
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: propertyId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: returns confirmation message
          content:
            application/json:
              schema:
                type: string
    delete:
      summary: delete favourite property for user
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: propertyId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: returns confirmation message
          content:
            application/json:
              schema:
                type: string

  /api/user/searches:
    get:
      summary: retrieve user's saved searches
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: returns a JSON
  #  post:
  #    summary:
  #    parameters:
  #    responses:
#  put:
#    summary:
#    parameters:
#    responses:
#  delete:
#    summary:
#    parameters:
#    responses:

components:
  schemas:
    QuickViewProperty:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        lan:
          type: string
        lat:
          type: string
        property_tags:
          type: array
          items:
            type: string
        price:
          type: integer
        address:
          type: string
        img:
          type: object
        outline_description:
          type: string
    DetailedProperty:
      description: Basically everything present in the database, more details will follow.
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        much_more:
          type: string