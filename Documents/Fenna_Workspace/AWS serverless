Comparative analysis between aws serverless/ lambda vs other aws solutions.

The following links are articles detailing issues lambda and the difference between it and other solutions:
https://betterprogramming.pub/what-happens-when-amazon-rolls-back-from-serverless-20ca38b88420

https://ten10.com/blog/amazon-prime-has-moved-away-from-serverless-should-you/

https://stackoverflow.com/questions/66846750/what-is-the-difference-between-aws-lambda-aws-elastic-beanstalk

https://docs.spring.io/spring-boot/docs/current/reference/html/deployment.html#deployment.cloud

Potential tutorials fot AWS Beanstalk:
https://www.baeldung.com/spring-boot-deploy-aws-beanstalk
https://aws.amazon.com/blogs/devops/deploying-a-spring-boot-application-on-aws-using-aws-elastic-beanstalk/

Conclusion
We (nishant and I) decided to stick with Lambda. Issues I came across with lambda were cold starts and the fact that lambda functions can only run for 15min. However,
	- Cold starts would be an issue with beanstalk and other aws solutions as well
	- Also, I found possible ways to improve performance/cold starts through Lambda snapstart
	- Because only the backend would be running on lambda, the 15min limit isn't a limitation for us. It is actually more of a benefit, because we only want the backend running when its necessary and calls will be made to it.

